# -*- coding: utf-8 -*-
"""Amrutha-Student Performance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GpMKg-TZDlCRcGRmCapJI6rUoSYLAwK9
"""

import pandas as pd

# importing clear data for analysis

# establishing a new column calculating the percentage from the three available scores and grading using the average scores

df = pd.read_csv(r"/content/StudentsPerformance.csv")

print(df.to_string())

df["Percentage"]=(df["math score"]+df["reading score"]+df["writing score"])/3
print(df["Percentage"])

df['Percentage'] = (df['math score']+df['reading score']+df['writing score'])/3
print(df["Percentage"])


def Grade(Percentage):
    if (Percentage >= 95):return 'O'
    if (Percentage >= 81):return 'A'
    if (Percentage >= 71):return 'B'
    if (Percentage >= 61):return 'C'
    if (Percentage >= 51):return 'D'
    if (Percentage >= 41):return 'E'
    else: return 'F'

df["grade"] = df.apply(lambda x : Grade(x["Percentage"]),axis=1)

print(df)

# using Seaborn for analysis

import seaborn as sns
import numpy as np

import seaborn as sns
import numpy as np

sns.scatterplot(x='gender', y='Percentage', data=df, palette='plasma')

df['gender'].value_counts()

import matplotlib.pyplot as plot

lunchCount = df['lunch'].value_counts()
print(lunchCount)

import matplotlib.pyplot as plt

plt.figure(figsize=(4, 4))
plt.plot(lunchCount.index, lunchCount.values, marker='o', color='b')  # Line graph
plt.title("Types of Lunch Distribution")
plt.xlabel("Lunch Type")
plt.ylabel("Count")
plt.grid(True)
plt.savefig(r"/content/sample_data/lunchdistribution.png")
plt.show()

# Below countplot illustares the grade secured by female and male

import matplotlib.pyplot as plt

# Summing up the scores for proportion representation
scores = [df['reading score'].sum(), df['writing score'].sum()]
labels = ['Reading Score', 'Writing Score']

plt.figure(figsize=(5, 5))
plt.pie(scores, labels=labels, autopct='%1.1f%%', colors=['pink', 'orange'])

# Add title
plt.title('Reading vs Writing Scores Distribution')

# Save the plot as a PNG file
plt.savefig(r"/content/sample_data/readingvswriting.png")

# Display the plot
plt.show()

import matplotlib.pyplot as plt

# Count occurrences of each writing score
writing_score_counts = df['writing score'].value_counts().sort_index()

plt.figure(figsize=(8, 5))
plt.bar(writing_score_counts.index, writing_score_counts.values, color='violet', edgecolor='black')

# Add labels and title
plt.xlabel('Writing Score')
plt.ylabel('Count')
plt.title("Writing Score Distribution")

# Save the plot as a PNG file
plt.savefig(r"/content/sample_data/writingscorenumbers.png")

# Display the plot
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8, 5))
sns.histplot(df, x='writing score', hue='gender', bins=20, kde=True, alpha=0.6)

# Add labels and title
plt.xlabel('Writing Score')
plt.ylabel('Count')
plt.title("Writing Score Distribution by Gender")

# Save the plot as a PNG file
plt.savefig(r"/content/sample_data/writingscorebygender.png")

# Display the plot
plt.show()

ax=sns.distplot(df['Percentage'], kde = False, color ='green', bins = 25)
fig=ax.get_figure()
fig.savefig(r"/content/sample_data\Distribution_percentage.png")

import seaborn as sns
import matplotlib.pyplot as plt

# Create a scatter plot with regression line
ax = sns.jointplot(x='Percentage', y='reading score', data=df, kind='reg', color='red')

# Save the plot as a PNG file
plt.savefig(r"/content/sample_data/Scatter_Reg_Plot.png")

# Display the plot
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(7, 5))
sns.violinplot(x='gender', y='reading score', data=df, inner='quartile', palette='coolwarm')

# Add labels and title
plt.xlabel('Gender')
plt.ylabel('Reading Score')
plt.title("Distribution of Reading Scores by Gender")

# Show the plot
plt.show()